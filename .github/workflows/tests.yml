name: tests

#on: [gollum]
on: [push, pull_request]

jobs:
  cs-check:
    name: Library coding style check
    runs-on: "ubuntu-latest"
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: 8.0

      - name: Coding Standards Check
        shell: bash
        run: |
          echo "::group::Accquire composer dependencies"
          composer update -o --ignore-platform-reqs
          composer update -o
          echo "::endgroup::"
          echo "::group::Run cs-check"
          composer cs-check

  unix-tests:
    name: PHP ${{ matrix.php-version }} ${{ matrix.ts }} Test on ${{ matrix.os }}
    runs-on: "${{ matrix.os }}"
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest]
        #os: [macos-latest]
        php-version: ['8.0', '7.4', '7.3']
        #php-version: ['8.0']
        #ts: ['nts', 'ts']
      max-parallel: 12
    steps:

      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-version }}
          tools: phpize
          # ini-values: pcov.directory=lib
          # coverage: pcov
          coverage: none
          extensions: curl,openssl
        #env:
          #phpts: ${{ matrix.ts }}

      - name: Setup extension dependencies
        run: |
          if [ ${{ runner.os }} = 'Linux' ]
          then
            sudo apt-get update
            sudo apt-get install -yqq libcurl4-openssl-dev
          fi

      - name: Build Swow extension
        run: |
          cd ext
          printf "\033[1mRun phpize\033[0m\n"
          phpize
          printf "\033[1mStart configure\033[0m\n"
          ./configure --enable-swow\
            --enable-swow-debug \
            --enable-swow-ssl=${{ runner.os == 'Linux' && 'yes' || '/usr/local/opt/openssl' }} \
            --enable-swow-curl=${{ runner.os == 'Linux' && 'yes' || '/usr/local/opt/curl' }}
          printf "\033[1mStart build Swow\033[0m\n"
          make -j`${{ runner.os == 'Linux' && 'nproc' || 'sysctl -n hw.logicalcpu' }}`
          printf "\033[1mDone build Swow\033[0m\n"
          php -n -d extension=.libs/swow.so --ri swow
          printf "\033[1mInstall Swow\033[0m\n"
          ${{ runner.os == 'Linux' && 'sudo' || ''}} make install-modules

      - name: Run extension tests
        id: ext-test
        continue-on-error: true
        run: |
          composer test-extension -- \
            -j`${{ runner.os == 'Linux' && 'nproc' || 'sysctl -n hw.logicalcpu' }}`

      - name: Setup composer dependencies
        run: composer update -o --ignore-platform-reqs

      - name: Run library tests
        run: composer test-library

      - name: Fail if anything failed
        if: steps.ext-test.outcome != 'success'
        run: exit 1

  windows-tests:
    name: PHP ${{ matrix.php-version }} ${{ matrix.ts }} Test on ${{ matrix.os }}
    runs-on: "${{ matrix.os }}"
    strategy:
      fail-fast: false
      matrix:
        os: ['windows-latest', 'windows-2016']
        php-version: ['8.0', '7.4', '7.3']
        ts: [ 'nts', 'ts' ]
        exclude:
          - os: windows-latest
            php-version: "7.4"
          - os: windows-latest
            php-version: "7.3"
          - os: windows-2016
            php-version: "8.0"
          - os: windows-2016
            php-version: "8.1"
      max-parallel: 6
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      # TODO: windows varient of setup-php seems to be so slow
      #       shell we add caches?
      - name: Setup PHP
        uses: shivammathur/setup-php@master
        with:
          php-version: ${{ matrix.php-version }}
          # ini-values: pcov.directory=lib
          # coverage: pcov
          coverage: none
          extensions: curl,openssl
        env:
          phpts: ${{ matrix.ts }}

      - name: Build Swow extension
        uses: ./.github/workflows/winext
        with:
          ext-path: ./ext
          tools-path: C:\tools\phpdev
          conf-args: --enable-swow-debug --enable-swow-ssl --enable-swow-curl
          ext-name: swow
          deps: openssl,libcurl,libssh2,zlib,nghttp2

      - name: Run extension tests
        shell: cmd
        id: ext-test
        continue-on-error: true
        run: |
          composer test-extension

      - name: Setup composer dependencies
        run: composer update -o --ignore-platform-reqs

      - name: Run library tests
        shell: cmd
        run: |
          CD lib && ^
          ..\vendor\bin\phpunit.bat

      - name: Fail if anything failed
        if: steps.ext-test.outcome != 'success'
        run: exit 1
